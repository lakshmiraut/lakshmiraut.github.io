/*
 * BoundConEX1.java
 *
 * Created on January 6, 2005, 2:31 PM
 */

package Exercises.opt;
import Interfaces.*;
import opt.BoundConOpt;

/**
 *
 * @author Owner
 */
public class BoundConEX1 {
    
    /** Creates a new instance of BoundConEX1 */
    public BoundConEX1() {
    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String[] args) {
        
        FunctionOfManyVariables myObj = new FunctionOfManyVariables(){
            public double value(double [] x){
                //            return Math.pow(x[0],2.0)+Math.pow(Math.abs(x[1]),3.0);
                return Math.pow(x[0]+2.0,2.0)+Math.pow(x[1]-3.0,2.0) + Math.pow(x[2]-4.0,2.0);
            }
        };
        
        VectorOfFunctionsOfManyVariables gradMyObj = new VectorOfFunctionsOfManyVariables(){
            
            public double [] value(double [] x){
                double [] g = new double[x.length];
                g[0] =2.0*(x[0]+2.0);
                g[1] =2.0*(x[1]-3.0);
                g[2] =2.0*(x[2]-4.0);
                return g;
            }
        };
        
        double [] low ={-1.5,3.5,0.0};
        double [] up = {999,999,3.0};
        double []  x0 = {-7.0, 3.0,2.0};
        
        BoundConOpt hwjni = new BoundConOpt();
        
        hwjni.setupObjective( myObj, gradMyObj, x0, low, up);
        
        hwjni.JNItnc();
        
        System.out.printf("The  optimal solution is: \n");
        for (int i=0;i<x0.length;i++) System.out.printf("x*[%d] = %10f \n",i, x0[i]);
        System.out.printf("\nThe optimal f* = %f\n", myObj.value(x0));
        System.out.printf("The gradient vector at the optimal solution is:\n");
        for (int i=0;i<x0.length;i++) System.out.printf("g*[%d] = %10f \n",i, gradMyObj.value(x0)[i]);
        
        
        System.out.println("\n\n");
        System.out.println(hwjni.messages);
        System.out.println("\nNumber of Function evaluations = "+hwjni.nfeval);
        
        //The following is for the same problem but no constriants
        
        System.out.println("The following is for the same problem but no constriants");
        for (int i=0;i<x0.length;i++) {low[i]= Double.NEGATIVE_INFINITY;up[i]=Double.POSITIVE_INFINITY;}
        
        hwjni.setupObjective( myObj, gradMyObj, x0, low, up);
        
        hwjni.JNItnc();
        
        System.out.printf("The  optimal solution is: \n");
        for (int i=0;i<x0.length;i++) System.out.printf("x*[%d] = %10f \n",i, x0[i]);
        System.out.printf("\nThe optimal f* = %f\n", myObj.value(x0));
        System.out.printf("The gradient vector at the optimal solution is:\n");
        for (int i=0;i<x0.length;i++) System.out.printf("g*[%d] = %10f \n",i, gradMyObj.value(x0)[i]);
        
        
        System.out.println("\n\n");
        System.out.println(hwjni.messages);
        System.out.println("\nNumber of Function evaluations = "+hwjni.nfeval);
        System.out.println("This is now working");
    }
}
