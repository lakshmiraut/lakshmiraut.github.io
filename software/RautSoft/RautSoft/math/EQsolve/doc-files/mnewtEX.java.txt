package Exercises.fsolve;

import static RautSoft.math.fsolve.ZeroFinderNR.*;
import RautSoft.Interfaces.*;
import RautSoft.math.fsolve.*;
public class mnewtEX {
    public static void main(String[] args) {
        final int n=4;  // number of variables
        
        int N=4;
        int NTRIAL=5;
        double TOLX=1.0e-20,TOLF=1.0e-20;
        
        
        double xx;
        double []  x = new double [n];
        for (int i=0;i<x.length;i++)x[i]=1;
        
        
        VectorOfFunctionsOfManyVariables  fvec = new VectorOfFunctionsOfManyVariables(){
            public double [] value( double[] x){
                double [] fvec = new double [4];
                fvec[0] = -(x[0]*x[0])-(x[1]*x[1])-(x[2]*x[2])+x[3];
                fvec[1] = (x[0]*x[0])+(x[1]*x[1])+(x[2]*x[2])+(x[3]*x[3])-1.0;
                fvec[2] = x[0]-x[1];
                fvec[3] = x[1]-x[2];
                return fvec;
            }
        };
        
        MatrixOfFunctionsOfManyVariables  jack = new MatrixOfFunctionsOfManyVariables(){
            public double [][] value( double[] x){
                double [][] fjac = new double [n][n];
                
                fjac[0][0] = -2.0*x[0];
                fjac[0][1] = -2.0*x[1];
                fjac[0][2] = -2.0*x[2];
                fjac[0][3] = 1.0;
                for (int i=0;i<n;i++) fjac[1][i] = 2.0*x[i];
                fjac[2][0] = 1.0;
                fjac[2][1] = -1.0;
                fjac[2][2] = 0.0;
                fjac[2][3] = 0.0;
                fjac[3][0] = 0.0;
                fjac[3][1] = 1.0;
                fjac[3][2] = -1.0;
                fjac[3][3] = 0.0;
                
                return fjac;
            }
        };
        System.out.println("Carry out mnewt with numerical computaitons of Jackobian presenting each trial");
        for (int j=0;j<5;j++){
            System.out.println("Trial # " + (j+1) );
            mnewt(fvec,jack,x,TOLX,TOLF,j);
            for (int i=0;i< n;i++) System.out.printf("x[%d] = %10f and f[%d](x)= %10f\n", i, x[i], i, fvec.value(x)[i]);
        }
        for (int i=0;i<x.length;i++)x[i]=1;
        System.out.println("Carry out mnewt with numerical computaitons of Jackobian with default value of NTRIAL=10");
        mnewtWithoutJackbobian(fvec,x);
        for (int i=0;i< n;i++) System.out.printf("x[%d] = %10f and f[%d](x)= %10f\n", i, x[i], i, fvec.value(x)[i]);
    
    for (int i=0;i<x.length;i++)x[i]=1;
        ZeroFinderNR zr=new ZeroFinderNR();
        zr.NTRIALS=5;
        System.out.println("Carry out mnewt with numerical computaitons of Jackobian with NTRIALS reset to 5");
        mnewtWithoutJackbobian(fvec,x);
        for (int i=0;i< n;i++) System.out.printf("x[%d] = %10f and f[%d](x)= %10f\n", i, x[i], i, fvec.value(x)[i]);
    }
}