
package Exercises.fsolve;

import static RautSoft.util.nrutil.*;
import static RautSoft.math.fsolve.ZeroFinder.*;
import RautSoft.Interfaces.*;

/**
 *
 * @author  Lakshmi K. Raut
 */
public class newtEX {
    
    public static void main(String[] args) {
        
        { //Ex1
            int n=2;
            pBoolean check = new pBoolean(false);
            double []  x = new double [n];
            x[0]=2.0;
            x[1]=0.5;
            
            VectorOfFunctionsOfManyVariables  func = new VectorOfFunctionsOfManyVariables(){
                public double [] value( double[] x){
                    double [] f = new double [2];
                    f[0]=(x[0]*x[0])+(x[1]*x[1])-2.0;
                    f[1]=Math.exp(x[0]-1.0)+x[1]*(x[1]*x[1])-2.0;
                    return f;
                }
                
            };
            newt(x,check,func);
            if (check.value) System.out.println("Convergence problems.");
            for (int i=0;i< n;i++) System.out.printf("x[%d] = %10f and f[%d](x)= %10f\n", i, x[i], i, func.value(x)[i]);
        }
        System.out.println("\nNow try another problem");
        
        {//Ex2:  Lets try the example from xmnewt
            int N=4;
            pBoolean check = new pBoolean(false);
            double []  x = new double [N];
            x[0]=2.0;
            x[1]=0.5;
            x[2] =1.0;
            x[3] =1.0;
            VectorOfFunctionsOfManyVariables  func = new VectorOfFunctionsOfManyVariables(){
                public double [] value( double[] x){
                    double [] fvec = new double [4];
                    fvec[0] = -(x[0]*x[0])-(x[1]*x[1])-(x[2]*x[2])+x[3];
                    fvec[1] = (x[0]*x[0])+(x[1]*x[1])+(x[2]*x[2])+(x[3]*x[3])-1.0;
                    fvec[2] = x[0]-x[1];
                    fvec[3] = x[1]-x[2];
                    return fvec;
                }
            };
            newt(x,check,func);
            if (check.value) System.out.println("Convergence problems.");
            for (int i=0;i< N;i++) System.out.printf("x[%d] = %10f and f[%d](x)= %10f\n", i, x[i], i, func.value(x)[i]);
        }
    }
}


